<DialogLayout>
    <ChildContent>
        <form>
            <div class="form-group row">
                <label for="attr" class="col-sm-3 col-form-label">
                    <strong>Attribute</strong>
                </label>
                <div class="col-sm-9">
                    <input type="text" readonly class="form-control-plaintext" id="attr" value="@(ModelAttr?.Attribute.Label)"/>
                </div>
            </div>
            <div class="form-group row">
                <label for="dataType" class="col-sm-3 col-form-label">
                    <strong>Data type</strong>
                </label>
                <div class="col-sm-9">
                    <input type="text" readonly class="form-control-plaintext" id="dataType" value="@(ModelAttr?.Attribute.DataType.Name)"/>
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-3 col-form-label">
                    <strong>Value</strong>
                </label>
                <div class="col-sm-9">
                    <div class="row mt-2">
                        <div class="col-sm-12">
                            @if (ModelAttr?.Attribute.DataType.IsBoxed is true) {
                                <select
                                    class="form-control @(Valid ? "is-valid" : "is-invalid")"
                                    @bind="editorValue"
                                >
                                    @foreach (var item in ModelAttr?.Attribute.Values) {
                                        <option value="@item.EventID.ToString()">@item.Value</option>
                                    }
                                </select>
                            }
                            else {
                                <input
                                    type="text"
                                    @bind-value="editorValue"
                                    class="form-control @(Valid ? "is-valid" : "is-invalid")"
                                />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </ChildContent>
    <Footer>
        <button type="button" class="btn btn-primary" @onclick="Confirm">Confirm</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
    </Footer>
</DialogLayout>

@code {
    [CascadingParameter]
    public BlazoredModalInstance BlazoredModal { get; set; }

    [Parameter]
    public AttachedAttrData ModelAttr { get; set; }

    [Parameter]
    public IBoxedValue Value { get; set; }

    private string editorValue = "";

    private bool Valid =>
        ModelAttr?.Attribute.DataType.Validate(editorValue) ?? false;

    protected override void OnInitialized() {
        if (Value != null) {
            editorValue = Value.PlainValue;
        }
    }

    private async Task Confirm() {
        if (!Valid) {
            return;
        }

        var shownValue = ModelAttr.Attribute.Values.Where(a => a.EventID.ToString() == editorValue).SingleOrDefault();
        var resultValue = new BoxedValueData(editorValue, shownValue?.Value ?? editorValue);
        await BlazoredModal.Close(ModalResult.Ok(resultValue));
    }

    private async Task Clear() {
        await BlazoredModal.Close(ModalResult.Ok<IBoxedValue>(null));
    }

    private async Task Cancel() {
        await BlazoredModal.Cancel();
    }
}