@page "/actors/create"
@inject EngineBase Engine
@inject NavigationManager NavigationManager
@inject CredentialsService CredentialsService

<Scaffold>
    <Title>Create actor</Title>
    <ChildContent>
        <EditForm Model="@model" OnValidSubmit="@HandleSubmit">
            <DataAnnotationsValidator/>

            <div class="form-group">
                <label for="name">Name</label>
                <InputText class="form-control" @bind-Value="model.Name" />
            </div>

            <h4 class="mt-5">Attributes</h4>
            @if (null != actorModel) {
                <ModelForm Model="@actorModel" Values="@model.Attributes" />
            }

            <hr/>
            <button type="submit" class="btn btn-primary">
                <span class="oi oi-plus mr-1"></span>
                <span>Confirm</span>
            </button>
        </EditForm>
    </ChildContent>
</Scaffold>

@code {
    private ActorCreateData model = new ActorCreateData();
    private IModel actorModel;

    protected async override Task OnInitializedAsync() {
        actorModel = await Engine.Storage.GetModel(StaticEvent.ActorModel);
    }

    private async Task HandleSubmit() {
        await model.Execute(Engine, CredentialsService);
        NavigationManager.NavigateTo("/actors");
    }
}