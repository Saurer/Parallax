@*
    Parallax
    Copyright (C) 2020  Frank Horrigan <https://github.com/saurer>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
*@

@page "/actors"
@inject IStorageAPI Storage
@inject RoutingService Routing
@inject PropertyContainerService PropertyProvider

<Scaffold>
    <Title>Actors</Title>
    <TitleRight>
        <NavLink href="@Routing.ActorsCreate()" class="btn btn-light">
            <i class="icon feather-plus mr-1"></i>
            <span>Create</span>
        </NavLink>
    </TitleRight>
    <ChildContent>
        <div class="card-columns">
            @foreach (var item in actors) {
                <IndividualCard Value="@item" OnUpdate="@Refresh" />
            }
        </div>
    </ChildContent>
</Scaffold>

@code {
    private IEnumerable<IndividualData> actors = Array.Empty<IndividualData>();

    protected override async Task OnInitializedAsync() {
        await Refresh();
    }

    private async Task Refresh() {
        var actors = await Storage.GetActors();
        this.actors = await Task.WhenAll(
            actors.Select(i => PropertyProvider.GetIndividual(i))
        );
    }
}