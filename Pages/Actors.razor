@page "/actors"
@inject EngineBase Engine
@inject IModalService Modal

<Scaffold>
    <Title>Actors</Title>
    <TitleRight>
        <NavLink href="/actors/create" class="btn btn-light">
            <span class="oi oi-plus mr-1"></span>
            <span>Create</span>
        </NavLink>
    </TitleRight>
    <ChildContent>
        <div class="card-columns">
            @foreach (var item in actors) {
                var modelLink = $"/models/{item.Model.ID}";
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">
                            <strong>@item.Name</strong>
                            @if (item.Valid) {
                                <span class="badge badge-success float-right">Valid</span>
                            }
                            else {
                                <span class="badge badge-danger float-right">Invalid</span>
                            }
                        </h5>
                        <div class="row">
                            <div class="col-sm">
                                <span class="oi oi-fork text-muted"></span>
                                <span>Model</span>
                            </div>
                            <div class="col-sm text-right">
                                <NavLink href="@modelLink">@item.Model.Name</NavLink>
                            </div>
                        </div>
                        <hr/>
                        @foreach (var attr in item.Model.Attributes) {
                            <div class="row">
                                <div class="col-sm">
                                    <strong>@attr.Name</strong>
                                </div>
                                <div class="col-sm text-right">
                                    @if (item.Attributes.ContainsKey(attr.ID)) {
                                        <span>@item.Attributes[attr.ID]</span>
                                    }
                                    else {
                                        <button class="btn btn-link p-0 border-bottom" @onclick="@(() => HandleAssignAttribute(item, attr.ID))">
                                            <span class="oi oi-warning text-warning"></span>
                                            <span class="text-muted">Unassigned</span>
                                        </button>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </ChildContent>
</Scaffold>

@code {
    private IEnumerable<IndividualData> actors = Array.Empty<IndividualData>();

    protected override async Task OnInitializedAsync() {
        await Refresh();
    }

    private async Task Refresh() {
        var actors = await Engine.Storage.GetActors();
        this.actors = await Task.WhenAll(actors.Select(i => IndividualData.Instantiate(i)));
    }

    private async Task HandleAssignAttribute(IndividualData individual, int attrID) {
        var parameters = new ModalParameters();
        parameters.Add("EventID", individual.ID);
        parameters.Add("AttrID", attrID);
        var modal = Modal.Show<AssignAttribute>($"Assign attribute to '{individual.Name}'", parameters);
        var result = (await modal.Result).Data is true;
        if (result) {
            await Refresh();
        }
    }
}