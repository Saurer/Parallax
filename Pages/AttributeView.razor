@page "/attributes/{id:int}"
@inject IStorageAPI Storage
@inject DialogService Dialog
@inject TransactionsService Tx

@if (null != attr) {
    <Scaffold>
        <Title>(@attr.ID) @attr.Name</Title>
        <ChildContent>
            <h4>Type</h4>
            @if (attr.IsBoxed) {
                <span>Boxed</span>
            }
            else {
                <span>Basic</span>
            }

            <hr/>

            @if (attr.IsBoxed) {
                <h4 class="mt-5">Values</h4>
                <table class="table">
                    <thead>
                        <tr>
                            <th style="width:1px">ID</th>
                            <th>Name</th>
                            <th style="width:1px"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var value in attr.Values) {
                            <tr>
                                <td>@value.EventID</td>
                                <td colspan="2">@value.Value</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }

            @if (attr.IsBoxed) {
                <hr/>
                <button class="btn btn-primary" @onclick="HandleAddValue">
                    <i class="icon feather-plus mr-1"></i>
                    <span>Add value</span>
                </button>
            }
        </ChildContent>
    </Scaffold>
}

@code {
    [Parameter]
    public int ID { get; set; }

    private AttrData attr = null;

    protected override async Task OnInitializedAsync() {
        await Redraw();
    }

    private async Task Redraw() {
        var attr = await Storage.GetAttribute(ID);
        this.attr = await AttrData.Instantiate(attr);
    }

    private async Task HandleAddValue() {
        var result = await Dialog.AddAttributeValue(ID);
        if (null != result) {
            await Tx.AssignAttributeValue(ID, result);
            await Redraw();
        }
    }
}