@*
    Parallax
    Copyright (C) 2020  Frank Horrigan <https://github.com/saurer>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
*@

@page "/entities"
@inject IStorageAPI Storage
@inject RoutingService Routing
@inject EntityService Entity

<Scaffold>
    <Title>Actions</Title>
    <TitleRight>
        <NavLink href="@Routing.EntitiesCreate()" class="btn btn-light">
            <i class="icon feather-plus mr-1"></i>
            <span>Create</span>
        </NavLink>
    </TitleRight>
    <ChildContent>
        <table class="table">
            <thead>
                <tr>
                    <th style="width:1px">ID</th>
                    <th>Label</th>
                    <th style="width:1px">Models</th>
                    <th style="width:1px">Individuals</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var entity in entities) {
                    <tr>
                        <td>@entity.ID</td>
                        <td>
                            <NavLink href="@Routing.EntitiesView(entity.ID)">@entity.Label</NavLink>
                        </td>
                        <td>@entity.Models.Count()</td>
                        <td>@entity.Individuals.Count()</td>
                    </tr>
                }
            </tbody>
        </table>
    </ChildContent>
</Scaffold>

@code {
    private IEnumerable<EntityData> entities = Array.Empty<EntityData>();

    protected override async Task OnInitializedAsync() {
        entities = await Entity.GetEntities();
    }
}