@page "/entities"
@inject IStorageAPI Storage
@inject RoutingService Routing

<Scaffold>
    <Title>Entities</Title>
    <TitleRight>
        <NavLink href="@Routing.EntitiesCreate()" class="btn btn-light">
            <i class="icon feather-plus mr-1"></i>
            <span>Create</span>
        </NavLink>
    </TitleRight>
    <ChildContent>
        <table class="table">
            <thead>
                <tr>
                    <th style="width:1px">ID</th>
                    <th>Name</th>
                    <th style="width:1px">Models</th>
                    <th style="width:1px">Individuals</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var entity in entities) {
                    <tr>
                        <td>@entity.ID</td>
                        <td>
                            <NavLink href="@Routing.EntitiesView(entity.ID)">@entity.Name</NavLink>
                        </td>
                        <td>@entity.Models.Count()</td>
                        <td>@entity.Individuals.Count()</td>
                    </tr>
                }
            </tbody>
        </table>
    </ChildContent>
</Scaffold>

@code {
    private IEnumerable<EntityData> entities = Array.Empty<EntityData>();

    protected override async Task OnInitializedAsync() {
        await Refresh();
    }

    private async Task Refresh() {
        var entities = await Storage.GetEntities();
        this.entities = await Task.WhenAll(entities.Select(entity => EntityData.Instantiate(entity)));
    }
}