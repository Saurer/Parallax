@page "/roles"
@inject EngineBase Engine
@inject IModalService Modal
@inject RoutingService Routing

<Scaffold>
    <Title>Roles</Title>
    <TitleRight>
        <NavLink href="@Routing.RolesCreate()" class="btn btn-light">
            <i class="icon feather-plus mr-1"></i>
            <span>Create</span>
        </NavLink>
    </TitleRight>
    <ChildContent>
        <div class="card-columns">
            @foreach (var item in roles) {
                <IndividualCard Value="@item" OnAssignAttribute="@(e => HandleAssignAttribute(item, e))" />
            }
        </div>
    </ChildContent>
</Scaffold>

@code {
    private IEnumerable<IndividualData> roles = Array.Empty<IndividualData>();

    protected override async Task OnInitializedAsync() {
        await Refresh();
    }

    private async Task Refresh() {
        var roles = await Engine.Storage.GetRoles();
        this.roles = await Task.WhenAll(roles.Select(i => IndividualData.Instantiate(i)));
    }

    private async Task HandleAssignAttribute(IndividualData individual, int attrID) {
        var parameters = new ModalParameters();
        parameters.Add("EventID", individual.ID);
        parameters.Add("AttrID", attrID);
        var modal = Modal.Show<AssignAttribute>($"Assign attribute to '{individual.Name}'", parameters);
        var result = (await modal.Result).Data is true;
        if (result) {
            await Refresh();
        }
    }
}