@*
    Parallax
    Copyright (C) 2020  Frank Horrigan <https://github.com/saurer>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
*@

@inject RoutingService Routing

<div style="border-left:dashed 1px #ccc;padding-left: 35px;margin-left:35px">
    <div class="mb-2 pt-1 pb-1">
        <div class="float-right">
            @if (IsEditable) {
                <button type="button" class="btn btn-link ml-2 p-0" @onclick="OnEdit">Edit</button>
                <button type="button" class="btn btn-link ml-2 p-0" @onclick="OnRemove">Remove</button>
            }
            else if (ActorID == 0){
                <i class="icon feather-user mr-1"></i>
                <span>System</span>
            }
            else if (ActorID.HasValue) {
                <NavLink href="@Routing.IndividualsView(ActorID.Value)" class="btn btn-link ml-2 p-0">
                    <i class="icon feather-user mr-1"></i>
                    <span>@ActorName</span>
                </NavLink>
            }
        </div>
        <div style="font-size:1.2em">@Value</div>
    </div>
    <div style="margin-left: 35px">
        @ChildContent
    </div>
</div>

@code {
    [Parameter]
    public string Value { get; set; }

    [Parameter]
    public int? ActorID { get; set; }

    [Parameter]
    public bool IsEditable { get; set; }

    [Parameter]
    public string ActorName { get; set; }

    [Parameter]
    public EventCallback OnEdit { get; set; }

    [Parameter]
    public EventCallback OnRemove { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }
}