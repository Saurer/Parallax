@inject IStorageAPI Storage
@inject TransactionsService Tx
@inject RoutingService Routing
@inject DialogService Dialog

<div class="card">
    <div class="card-body">
        <h5 class="card-title">
            <NavLink href="@Routing.IndividualsView(@Value.ID)">
                <strong>
                    <span>(@Value.ID) @Value.Label</span>
                </strong>
            </NavLink>

            @if (Value.Valid) {
                <span class="badge badge-success float-right">Valid</span>
            }
            else {
                <span class="badge badge-danger float-right">Invalid</span>
            }
        </h5>
        <div class="row">
            <div class="col-sm">
                <i class="icon feather-code text-muted"></i>
                <span>Model</span>
            </div>
            <div class="col-sm text-right">
                <NavLink href="@Routing.ModelsView(Value.Model.ModelID)">@Value.Model.Label</NavLink>
            </div>
        </div>
        <div class="row">
            <div class="col-sm">
                <i class="icon feather-user text-muted"></i>
                <span>Creator</span>
            </div>
            <div class="col-sm text-right">
                @if (Value.Actor.HasValue) {
                    <NavLink href="@Routing.IndividualsView(Value.Actor.Value)">@Value.ActorLabel</NavLink>
                }
                else {
                    @(Value.ActorLabel ?? "System")
                }
            </div>
        </div
    </div>
</div>

@code {
    [Parameter]
    public IndividualData Value { get; set; }

    [Parameter]
    public EventCallback OnUpdate { get; set; }
}