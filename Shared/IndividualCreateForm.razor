@inject EngineBase Engine
@inject CredentialsService CredentialsService

<EditForm Model="@model" OnValidSubmit="@HandleSubmit">
    <DataAnnotationsValidator/>

    <div class="form-group">
        <label for="name">Name</label>
        <InputText class="form-control" @bind-Value="model.Name" />
    </div>

    <h4 class="mt-5">Attributes</h4>
    @if (null != dbModel) {
        <ModelForm
            Model="@dbModel"
            Attributes="@model.Attributes"
            Relations="@model.Relations"
        />
    }

    <hr/>
    <button type="submit" class="btn btn-primary">
        <span class="oi oi-plus mr-1"></span>
        <span>Confirm</span>
    </button>
</EditForm>

@code {
    [Parameter]
    public int BaseEvent { get; set; }

    [Parameter]
    public int ModelID { get; set; }

    [Parameter]
    public EventCallback OnSubmit { get; set; }

    private IndividualCreateData model;
    private ModelData dbModel;

    protected async override Task OnInitializedAsync() {
        model = new IndividualCreateData(BaseEvent);
        var dbModel = await Engine.Storage.GetModel(ModelID);
        this.dbModel = await ModelData.Instantiate(dbModel);
        model.ModelID = ModelID;
    }

    private async Task HandleSubmit() {
        await model.Execute(Engine, CredentialsService);
        await OnSubmit.InvokeAsync(null);
    }
}