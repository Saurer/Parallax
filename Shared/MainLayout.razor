@inherits LayoutComponentBase
@inject IStorageAPI Storage
@inject CredentialsService Credentials
@inject NavigationManager NavigationManager

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    <div class="top-row px-4">
        <div class="dropdown">
            <button class="btn btn-light dropdown-toggle" @onclick="HandleMenuClick">
                <i class="icon feather-user mr-1"></i>
                <span>@(Credentials.CurrentActor.Label)</span>
            </button>
            <div class="dropdown-menu" style="left:auto;right:0;display:@(userDropdown ? "block" : "none")">
                @foreach (var actor in actors) {
                    <button class="dropdown-item" disabled="@(Credentials.CurrentActor.IndividualID == actor.IndividualID)" @onclick="() => HandleUserClick(actor)">
                        <i class="icon feather-user mr-1"></i>
                        <span>@actor.Label</span>
                    </button>
                }
            </div>
        </div>
    </div>

    <div class="content px-4">
        @Body
    </div>
</div>

@code {
    private bool userDropdown = false;
    private IEnumerable<IIndividual> actors = Array.Empty<IIndividual>();

    private async Task HandleMenuClick() {
        userDropdown = !userDropdown;

        if (userDropdown) {
            actors = await Storage.GetActors();
        }
    }

    private void HandleUserClick(IIndividual actor) {
        Credentials.SetCurrentActor(actor);
        userDropdown = false;
        NavigationManager.NavigateTo("/");
    }
}